[{"/Users/macbookpro/PersonalProjects/covidinperspective/src/reportWebVitals.js":"1","/Users/macbookpro/PersonalProjects/covidinperspective/src/App.js":"2","/Users/macbookpro/PersonalProjects/covidinperspective/src/index.js":"3","/Users/macbookpro/PersonalProjects/covidinperspective/src/Components/Map.js":"4"},{"size":362,"mtime":1607464327540,"results":"5","hashOfConfig":"6"},{"size":14016,"mtime":1607797097920,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1607464327539,"results":"8","hashOfConfig":"6"},{"size":3667,"mtime":1607787397838,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1itzypz",{"filePath":"12","messages":"13","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/macbookpro/PersonalProjects/covidinperspective/src/reportWebVitals.js",[],"/Users/macbookpro/PersonalProjects/covidinperspective/src/App.js",["19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34"],"/Users/macbookpro/PersonalProjects/covidinperspective/src/index.js",[],"/Users/macbookpro/PersonalProjects/covidinperspective/src/Components/Map.js",["35"],"import React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport './Map.css'\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst MapChart = (props) => {\n    const {\n        data,\n        maskData,\n        gradientColorRight,\n        gradientColorLeft,\n        gradientColorMiddle,\n        keyTitle\n    } = props\n\n    const [clicked, setClicked] = useState(false)\n    const [clickedData, setClickedData] = useState()\n\n    const wasClicked = (data) => {\n        console.log(data)\n        setClicked(true)\n        setClickedData(data)\n    }\n\n    console.log(data)\n    const capitalizeFirstLetter = (string) => {\n        if (string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }\n\n    return (\n        <div className=\"Main\">\n            <ComposableMap projection=\"geoAlbersUsa\" className=\"Map\">\n                <Geographies geography={geoUrl}>\n                    {({ geographies }) =>\n                        geographies.map(geo => {\n                            const cur = data.find(s => s.fips === geo.id);\n                            const noData = { state: \"No Data\" }\n                            return (\n                                <Geography\n                                    onClick={() => cur ? wasClicked(cur) : wasClicked(noData)}\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    fill={cur ? (maskData ? cur.maskColor : cur.color) : '#EEE'}\n                                />\n                            );\n                        })\n                    }\n                </Geographies>\n            </ComposableMap>\n            <div className=\"Gradient\">\n                <div className=\"GradientKey\">\n                    <span>Low {keyTitle}</span>\n                    <span>High {keyTitle}</span>\n                </div>\n                <div className=\"GradientBar\" style={{ background: `linear-gradient(to right, ${gradientColorLeft}, 35%, ${gradientColorRight}) ` }}>\n                </div>\n            </div>\n            <div className=\"BottomBar\">\n                {clicked ?\n                    <div>\n                        <span>\n                            <span className=\"CountyDataTitle\">{capitalizeFirstLetter(clickedData.county)} County - </span>\n                            <span className=\"CountyDataTitle\">{capitalizeFirstLetter(clickedData.state)}</span>\n                        </span>\n                        <span className=\"CountyData\">\n                            <div>\n                                <span className=\"CountyDataTitle\">Usually Wear Mask</span>\n                                <span className=\"CountyDataNumber\">{(clickedData.usuallyWearMask * 100).toFixed(1)}%</span>\n                            </div>\n                            <div>\n                                <span className=\"CountyDataTitle\">Deaths</span>\n                                <span className=\"CountyDataNumber\">{clickedData.deaths*1}</span>\n                            </div>\n                            <div>\n                                <span className=\"CountyDataTitle\">Infected Pop. - Last 30 Days</span>\n                                <span className=\"CountyDataNumber\">{((clickedData.casesLast30 / clickedData.pop) * 100).toFixed(1)}%</span>\n                            </div>\n                        </span>\n                    </div>\n                    :\n                    <span>Select a county to see data...</span>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default MapChart;\n",{"ruleId":"36","severity":1,"message":"37","line":3,"column":38,"nodeType":"38","messageId":"39","endLine":3,"endColumn":51},{"ruleId":"36","severity":1,"message":"40","line":4,"column":10,"nodeType":"38","messageId":"39","endLine":4,"endColumn":23},{"ruleId":"36","severity":1,"message":"41","line":4,"column":25,"nodeType":"38","messageId":"39","endLine":4,"endColumn":36},{"ruleId":"36","severity":1,"message":"42","line":4,"column":38,"nodeType":"38","messageId":"39","endLine":4,"endColumn":47},{"ruleId":"36","severity":1,"message":"43","line":6,"column":10,"nodeType":"38","messageId":"39","endLine":6,"endColumn":13},{"ruleId":"36","severity":1,"message":"44","line":9,"column":10,"nodeType":"38","messageId":"39","endLine":9,"endColumn":14},{"ruleId":"45","severity":1,"message":"46","line":52,"column":30,"nodeType":"47","messageId":"48","endLine":52,"endColumn":32},{"ruleId":"49","severity":1,"message":"50","line":55,"column":6,"nodeType":"51","endLine":55,"endColumn":21,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":79,"column":6,"nodeType":"51","endLine":79,"endColumn":25,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"55","line":91,"column":6,"nodeType":"51","endLine":91,"endColumn":29,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":122,"column":6,"nodeType":"51","endLine":122,"endColumn":8,"suggestions":"58"},{"ruleId":"45","severity":1,"message":"46","line":154,"column":47,"nodeType":"47","messageId":"48","endLine":154,"endColumn":49},{"ruleId":"45","severity":1,"message":"46","line":164,"column":41,"nodeType":"47","messageId":"48","endLine":164,"endColumn":43},{"ruleId":"45","severity":1,"message":"46","line":191,"column":27,"nodeType":"47","messageId":"48","endLine":191,"endColumn":29},{"ruleId":"45","severity":1,"message":"46","line":281,"column":37,"nodeType":"47","messageId":"48","endLine":281,"endColumn":39},{"ruleId":"45","severity":1,"message":"46","line":293,"column":37,"nodeType":"47","messageId":"48","endLine":293,"endColumn":39},{"ruleId":"36","severity":1,"message":"59","line":13,"column":9,"nodeType":"38","messageId":"39","endLine":13,"endColumn":28},"no-unused-vars","'useDebugValue' is defined but never used.","Identifier","unusedVar","'ComposableMap' is defined but never used.","'Geographies' is defined but never used.","'Geography' is defined but never used.","'csv' is defined but never used.","'Line' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parseCountyData'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has missing dependencies: 'finalCountyData.length' and 'states'. Either include them or remove the dependency array.",["61"],"React Hook useEffect has a missing dependency: 'parseNYTData'. Either include it or remove the dependency array.",["62"],"React Hook useEffect has a missing dependency: 'parseMaskData'. Either include it or remove the dependency array.",["63"],"'gradientColorMiddle' is assigned a value but never used.",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [parseCountyData, rawStatesData]",{"range":"72","text":"73"},"Update the dependencies array to be: [countyData.length, finalCountyData.length, states]",{"range":"74","text":"75"},"Update the dependencies array to be: [parseNYTData, populationData.length]",{"range":"76","text":"77"},"Update the dependencies array to be: [parseMaskData]",{"range":"78","text":"79"},[2630,2645],"[parseCountyData, rawStatesData]",[3306,3325],"[countyData.length, finalCountyData.length, states]",[3661,3684],"[parseNYTData, populationData.length]",[4496,4498],"[parseMaskData]"]